package cn.magicalsheep.client.ui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class Mode1Frame {
    public JPanel root;
    public JTextField inputText;
    public JButton confirm;
    public JLabel score;
    public JLabel msg;
    public JLabel mean;
    public JProgressBar progressBar;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow,top:5dlu:noGrow,center:max(d;4px):grow(0.1),top:4dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow"));
        CellConstraints cc = new CellConstraints();
        root.add(panel1, cc.xy(1, 11, CellConstraints.DEFAULT, CellConstraints.FILL));
        inputText = new JTextField();
        panel1.add(inputText, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
        confirm = new JButton();
        confirm.setText("确认");
        panel1.add(confirm, cc.xy(5, 1));
        score = new JLabel();
        Font scoreFont = this.$$$getFont$$$(null, -1, 20, score.getFont());
        if (scoreFont != null) score.setFont(scoreFont);
        score.setHorizontalAlignment(0);
        score.setText("分数：10");
        root.add(score, cc.xy(1, 3));
        mean = new JLabel();
        Font meanFont = this.$$$getFont$$$(null, Font.BOLD, 48, mean.getFont());
        if (meanFont != null) mean.setFont(meanFont);
        mean.setHorizontalAlignment(0);
        mean.setText("Mean");
        root.add(mean, cc.xy(1, 7));
        msg = new JLabel();
        Font msgFont = this.$$$getFont$$$(null, -1, 14, msg.getFont());
        if (msgFont != null) msg.setFont(msgFont);
        msg.setHorizontalAlignment(10);
        msg.setText("Msg");
        root.add(msg, cc.xy(1, 9, CellConstraints.CENTER, CellConstraints.CENTER));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("fill:max(d;4px):grow(0.1),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):grow(0.1)", "center:d:noGrow"));
        root.add(panel2, cc.xy(1, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        progressBar = new JProgressBar();
        progressBar.setMaximumSize(new Dimension(32767, 4));
        progressBar.setMinimumSize(new Dimension(10, 4));
        progressBar.setPreferredSize(new Dimension(146, 8));
        progressBar.setString("0%");
        progressBar.setValue(0);
        panel2.add(progressBar, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.CENTER));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }
}
